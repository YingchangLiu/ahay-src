from rsf.proj import *
### read segy-shot files and convert them to RSF
###############################################################################

parts   = [] # for shots files
tparts  = [] # for header files
coords  = [] # shot coordinates file

# To test, take one segy file (403), then change back to (413)

# cant12.413.segy is in data reprository, to process it change Salah's
# following range to range(403,414).  Probably will require other script changes to make
# lines longer.  There are splits and sfwindows.  
for n in range(403,413):
        # to run locally use this Fetch and inp.  To run on stampede I logonto a computer
        # that had the data and ran:
        # rcp cant12.*.segy karls@stampede.tacc.utexas.edu:/work/02167/karls/data/cant12/fetch
        
	inp = 'cant12.%d.segy' % n
	Fetch(inp,'cant12',server='http://s3.amazonaws.com',top='open.source.geoscience/open_data')
        
#	inp = '/work/02167/karls/data/cant12/fetch/cant12.%d.segy' % n

	out = 'cant12-%d' % n

	Flow([out,'t'+out,out+'.asc',out+'.bin'],inp,
             'segyread tfile=${TARGETS[1]} hfile=${TARGETS[2]} bfile=${TARGETS[3]}')
	
	# mask out traces with trid > 2   ,  key# 7 (f1=7) on header file
	mask = 'mask%d' % n
	Flow(mask,'t'+out,'window n1=1 f1=7 | mask max=2')

        # Prepare for binning
        ######################
	part  = 'part%d' % n
	tpart = 'tpart%d' % n

	# masked header 
	Flow(tpart,['t'+out,mask],'headerwindow mask=${SOURCES[1]}')
        
        # extract masked shots 
	Flow(part,[out, mask, tpart],
	     '''
             headerwindow mask=${SOURCES[1]} | 
             intbin head=${SOURCES[2]} xk=tracf yk=fldr |
             put d2=12.5 o2=29.25 unit2="m" label2="Offset" 
                 d3=12.5          unit3="m" label3="Shot"
             ''')
 
	# shot location (sx and sy)
	coord = 'coord%d' % n
	Flow(coord,[tpart, mask],
	     '''
             window n1=2 f1=21 |
             intbin head=${SOURCES[0]} xk=tracf yk=fldr |
             put d2=12.5 o2=29.25 unit2="m" label2="Offset" 
                 d3=12.5          unit3="m" label3="Shot"
             ''')

	parts.append(part)
	tparts.append(tpart)
	coords.append(coord)

# concatenate shot files
Flow('rshots',parts,'cat axis=3 ${SOURCES[1:%d]}' % len(parts))

# reverse traces in each shot
Flow('shots','rshots','reverse which=2 opt=i')
#  removed this parallel stuff , split=[3,4791])

# concatenate header files
Flow('tshots',tparts,'cat axis=2 ${SOURCES[1:%d]}' % len(tparts))

# concatenate shot coordinates
Flow('shotcoords',coords,'cat axis=3 ${SOURCES[1:%d]}' % len(coords))

Result('shotcoords','shotcoords',
       '''
       dd type=complex
       | window  n2=1 f2=0 
       | graph symbol='*'
       ''')
# Remove the last shot (it has 45 traces instead of 120 traces )
#Flow('shots','lshots','window n3=5010')
#Flow('tshots','ltshots','window n2=601200')
#Flow('shotcoords','lshotcoords','window n3=5010')

End()
