from rsf.proj import *

SConscript('../stkdemul/SConstruct')

data='../stkdemul/dmostk.rsf'
mute='../vel/vel.rsf' # stacking velocity
#mask='../vel/vel.rsf' # mute around hand picked velocities

fvel=1390

# Slope estimation
Flow('dip',data,'dip rect1=10 rect2=10')
Result('dip',
       '''
       grey color=j scalebar=y
       title="Dominant Slope"
       barlabel=Slope barunit=samples
       ''')

# Plane-wave destruction
Flow('dif',[data,'dip'],'pwd dip=${SOURCES[1]}')
Result('dif','grey title="Separated Diffractions" ')

# Velocity continuation for diffractions
Flow('fourier_dif','dif','cosft sign2=1 | put o3=0')

# Velocity continuation for reflections
Flow('fourier_ref',data,'cosft sign2=1 | put o3=0')

# check n2 of fourier
n2=9701

Flow('velconk_ref','fourier_ref',
     '''
     stolt vel=%d | spray axis=2 n=1 o=0 d=1 |
     fourvc pad2=4096 nv=201 dv=10 v0=%d verb=y
    '''%(fvel,fvel),split=[2,n2],reduce='cat axis=3')

Flow('velcon_tref','velconk_ref',
     '''
     transp plane=23 memsize=16000 
     ''',split=[3,9701],reduce='cat axis=2')

Flow('velcon_ref','velcon_tref',
     '''
     cosft sign2=-1
     ''')

Flow('velconk_dif','fourier_dif',
     '''
     stolt vel=%d | spray axis=2 n=1 o=0 d=1 |
     fourvc pad2=4096 nv=201 dv=10 v0=%d verb=y
    '''%(fvel,fvel),split=[2,n2],reduce='cat axis=3')


Flow('velcon_tdif','velconk_dif',
     '''
     transp plane=23 memsize=16000
     ''',split=[3,9701],reduce='cat axis=2')


Flow('velcon_dif','velcon_tdif',
     '''
    cosft sign2=-1
     ''')

# Multipath imaging
##########################
# Pick best focused image
##########################
dvel=100
dv=10
nv=201
v0=1400
Flow('mask',mute,
     '''
     spray axis=2 n=%d o=%d d=%d label="velocity" unit="m/s"
     | math output="input-x2"
     | mask max=%g min=%g
     | dd type=float
     | smooth rect2=5
     '''%(nv,v0,dv,dvel/2,-dvel))

Flow('maskt','mask','transp plane=23 memsize=16000')

mask='maskt'
difstk='velcon_dif'
############

Flow('mpath',[difstk,mask],
     '''
     mul ${SOURCES[1]}
     | stack axis=3 norm=no
     ''')

Result('mpath','grey title="Multipath image" ')

# velocity of focuses diff
Flow('mpathv',[difstk,mask],
     '''
     math output="x3*input"
     | mul ${SOURCES[1]}
     | stack axis=3 norm=no
     ''')

# migration velocity
Flow('migvel','mpathv mpath','divn den=${SOURCES[1]} rect1=40 rect2=80')

Result('migvel',
      '''
      grey color=j mean=y scalebar=y
      title="Picked migration Velocity"
      ''')

End()

