from rsf.proj import *

SConscript('../fetch/SConstruct')

#Velocity model:
#Flow('Fvel', None, 'spike mag=1500,3000 nsp=2 k1=1,101 l1=100,200 d1=4 d2=4 label1=z label2=x n1=200 n2=200 o1=2 o2=2 unit1=m unit2=m')
Flow('Fvel','../fetch/vp.rsf',
            '''
            sfput unit1="m" unit2="m" d1=10 d2=20 label1=Depth label2=Distance
            ''')
Result('Fvel','grey color=j scalebar=y')

#Density model:
#Flow('Fden', None, 'spike mag=1 nsp=1 k1=1 l1=200 d1=4 d2=4 label1=z label2=x n1=200 n2=200 o1=2 o2=2 unit1=m unit2=m')
Flow('Fden','Fvel', 'math output=1')

#Source wavelet:
Flow('Fwav', None, 'spike nsp=1 n1=16001 d1=0.001 k1=200 | ricker1 frequency=10 | transp')
#Result('Fwav',''' transp | sfwiggle ''') 


# experiment setup:
par = {
    'nx':1126, 'ox':0, 'dx':20, 'lx':'x','ux':'m',
    }

# receiver positions
Flow('r_',None,'math n1=%(nx)d d1=%(dx)g o1=%(ox)g output=0' % par)
Flow('xr','r_','math output="x1"')
Flow('zr','xr','math output=20')

Flow('rr',['xr','zr'],'''cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

# source positions
Flow('s_',None,'math n1=151 d1=100 o1=3700 output=0')
Flow('zs','s_','math output=20')
Flow('xs','s_','math output=x1')
#Flow('rs','s_','math output=1')
Flow('ss',['xs','zs'],'''
     cat axis=2 space=n
     ${SOURCES[0]} ${SOURCES[1]} | transp
     ''', stdin=0)

#Creating data at specified receiver + saving full wavefield every 10th step: 
Flow(['Fdat', 'Fwfl'], ['Fwav', 'Fvel', 'Fden', 'ss', 'rr'], 'awefd2d  vel=${SOURCES[1]} sou=${SOURCES[3]} rec=${SOURCES[4]} wfl=${TARGETS[1]} den=${SOURCES[2]} verb=y free=y expl=y snap=y dabc=y jdata=8 jsnap=500',split=[2,151,[3]],reduce='cat axis=3') 

# COMMENT OUT FOR NOW.  i DO NOT REMEMBER WHAT lIN WAS DOING WITH OMP
#Flow(['Fdat_omp', 'Fwfl_omp'], ['Fwav', 'Fvel', 'Fden', 'ss', 'rr'], 'awefd2d  vel=${SOURCES[1]} sou=${SOURCES[3]} rec=${SOURCES[4]} wfl=${TARGETS[1]} den=${SOURCES[2]} verb=y free=y expl=y snap=y dabc=y jdata=1 jsnap=1000',split=[2,'omp',[3]],reduce='cat axis=3')

# split=(?,'mpi',?) only allows splitting on one input in Flow (probably stdin) 
#Flow(['Fdat_mpi', 'Fwfl_mpi'], ['Fwav', 'Fvel', 'Fden', 'ss', 'rr'], 'awefd2d  vel=${SOURCES[1]} sou=${SOURCES[3]} rec=${SOURCES[4]} wfl=${TARGETS[1]} den=${SOURCES[2]} verb=y free=y expl=y snap=y dabc=y jdata=1 jsnap=1000',split=[2,'mpi',[3]],reduce='cat axis=3') 
 
Flow('shots','Fdat','sftransp plane=12 | sfput unit2="m" label3="receiver" label3="shot"')
#View the wavefield movie:
#Result('movie', 'Fwfl', 'grey gainpanel=a pclip=99 color=j scalebar=y')
#Result('movie_omp', 'Fwfl_omp', 'grey gainpanel=a pclip=99 color=j scalebar=y')
#Result('movie_mpi', 'Fwfl_mpi', 'grey gainpanel=a pclip=99 color=j scalebar=y')
# View a wavefield snapshot:
Result('snap', 'Fwfl', 'window f3=8 n3=1 | grey pclip=99 color=j title="snapshot at t=4s"')
#Result('snap_omp', 'Fwfl_omp', 'window f3=8 n3=1 | grey pclip=99 color=j title="snapshot at t=4s"')
#Result('snap_mpi', 'Fwfl_mpi', 'window f3=8 n3=1 | grey pclip=99 color=j title="snapshot at t=4s"')
#View the data recorded at receiver:
Result('data', 'shots', 'grey title="Data recorded at receiver" label2=receiver')

End()
