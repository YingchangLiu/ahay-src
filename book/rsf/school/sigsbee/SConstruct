from rsf.proj import *
import wplot,geom,awe

# ------------------------------------------------------------
# Sigsbee 2A parameters
f2m=0.3048     # convert ft to m
par = dict(
    nx=1601,ox=25.*f2m,dx=0.025*f2m,lx='x',ux='km',
    ny=1,   oy=0.0*f2m,dy=0.025*f2m,ly='y',uy='km',
    nz=801, oz=4.5*f2m,dz=0.025*f2m,lz='z',uz='km',
    nt=5001,ot=0.0,    dt=0.0009,   lt='t',ut='s',
    jsnap=200, # snapshot jump
    kt=150,    # wavelet delay (samples) 
    nb=100     # boundary (grid points)
    )
# ------------------------------------------------------------
# set custom functions
awe.param(par)
wplot.param(par)
par['labelattr']=par['labelattr']+'n2tic=20'

# ------------------------------------------------------------
# get the model
strvelfile = 'sigsbee2a_stratigraphy.sgy'
Fetch(strvelfile,'sigsbee')
Flow('vraw',strvelfile,'segyread read=data')

# setup the model
Flow('modl','vraw',
     '''
     scale rscale=%g |
     put o1=%g d1=%g o2=%g d2=%g |
     window n1=%d min1=%g n2=%d min2=%g
     ''' % (0.001*f2m,
            0     ,0.025*f2m,
            10*f2m,0.025*f2m,
            par['nz'],par['oz'],
            par['nx'],par['ox']
            ))
Plot  ('modl',wplot.igrey2d('mean=y',par))
Result('modl','modl','Overlay')

# ------------------------------------------------------------
# source coordinates (exploding reflectors)
geom.boxarray2d('ss',
                5,   # vertical number
                5,   # vertical origin 
                0.5, # vertical sampling
                14,  # horizontal number
                10,  # horizontal origin
                0.5, # horizontal sampling
                par)
Plot(  'ss',wplot.ssplot2d('',par))
Result('ss',['modl','ss'],'Overlay')

# ------------------------------------------------------------
# horizontal array @ z=1.5km
geom.horizontal2d('tH',1.5,'',par)
par['jrH']=10   # jump (grid points)
par['orH']=14.0 # origin
par['nrH']=75   # number


# vertical array @ x=8.5km
geom.vertical2d('tV',8.5,'',par)
par['jrV']=20   # jump (grid points)
par['orV']=2.5  # origin
par['nrV']=25   # number


for j in ('H','V'):

    # window array
    Flow('r'+j,'t'+j,
         'window j2=%d min2=%g n2=%d'%
         (par['jr'+j],  # jump
          par['or'+j],  # origin
          par['nr'+j])) # number
    
    # plot array
    Plot(  'r'+j,wplot.rrplot2d('',par))
    Result('r'+j,['modl','r'+j],'Overlay')
    
# ------------------------------------------------------------
# merge receiver files
Flow('rA',['rH','rV'],
     'cat axis=2 space=n ${SOURCES[1]}')
Plot('rA',['rH','rV'],'Overlay')
# ------------------------------------------------------------
# make the density
Flow('dens','modl',
     'math output=1')
Plot(  'dens',wplot.igrey2d('mean=y',par))
Result('dens',['dens','ss','rH','rV'],'Overlay')

# ------------------------------------------------------------
# make stratigraphic velocity
Flow('vstr','modl',
     'window')
# make smooth velocity
Flow('vsmo','modl',
     'smooth rect1=25 rect2=25 repeat=3')
# ------------------------------------------------------------
for v in ('vstr','vsmo'):
    # plot velocities
    Plot(  v,wplot.igrey2d('mean=y',par))

    # overlay sources and receivers
    Result(v,[v,'ss','rH','rV'],'Overlay')

# ------------------------------------------------------------
# construct wavelet
awe.wavelet('wav',10,'',par) 

# plot wavelet
Result('wav','window |'
       + wplot.waveplot('',par)) 

# ------------------------------------------------------------
# run FD modeling
awe.awefd2d('tmpA',  # data file (all receivers)
            'wfld',  # wavefield snapshots
            'wav',   # source wavelet
            'vsmo',  # velocity
            'dens',  # density
            'ss',    # source coordinates
            'rA',    # receiver coordinates
            'fsrf=n expl=y',# optional flags
            par)

# ------------------------------------------------------------
nfrm=int((par['nt']-1)/par['jsnap'])
Flow('wbyt','wfld','byte gainpanel=a pclip=99.9')
for i in range(nfrm):
    tag = '-%02d'%i

    Plot('wfld'+tag, 'wbyt',wplot.ifrm2d(i,'',par))

    Plot(  'wovl'+tag,['wfld'+tag,'ss','rH','rV'],'Overlay')

    Result('wfld'+tag,'wfld'+tag,'Overlay')

Result('wfld',
        ['wovl-%02d'%i for i in range(nfrm)],
       'Movie')
# ------------------------------------------------------------
# remove the wavelet delay
Flow('datA','tmpA',
     '''
     window squeeze=n f2=%(kt)d |
     pad end2=%(kt)d |
     put o2=%(ot)g
     ''' %par)

# ------------------------------------------------------------
# window data from the horizontal array
Flow('datH','datA',
     '''
     window squeeze=n n1=%d |
     put o1=%g d1=%g
     '''%(par['nrH'],
          par['orH'],
          par['jrH']*par['dx']))
Result('datH',       'window j2=4 | transp|'
       + wplot.dgrey2d('',par))
Result('wigH','datH','window j2=4 | transp|'
       + wplot.dwigl2d('pclip=98',par))

# ------------------------------------------------------------
# window data from the vertical array
Flow('datV','datA',
     '''
     window squeeze=n f1=%d |
     put o1=%g d1=%g
     '''%(par['nrH'],
          par['orV'],
          par['jrV']*par['dz']))
Result('datV',       'window j2=4 |'
       + wplot.egrey2d('',par))
Result('wigV','datV','window j2=4 |'
       + wplot.ewigl2d('pclip=98',par))
    
# ------------------------------------------------------------
for j in ('H','V','A'):

    # run FD migration
    awe.awertm2d('img'+j,  # image
                 'dat'+j,  # data
                 'r'+j,    # receiver coordinates
                 'vsmo',   # velocity
                 'dens',   # density
                 'fsrf=n ', # optional flags
                  par)
    
    # plot image
    Plot(  'img'+j,'bandpass flo=2 |'
           + wplot.igrey2d('pclip=99.99',par))
    
    # overlay sources and receivers
    Result('img'+j,['img'+j,'ss','r'+j],'Overlay')
    
# ------------------------------------------------------------
End()
